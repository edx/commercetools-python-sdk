# This file is automatically generated by the rmf-codegen project.
#
# The Python code generator is maintained by Lab Digital. If you want to
# contribute to this project then please do not edit this file directly
# but send a pull request to the Lab Digital fork of rmf-codegen at
# https://github.com/labd/rmf-codegen
import re
import typing

import marshmallow
import marshmallow_enum

from commercetools import helpers

from ... import models

# Fields


# Marshmallow Schemas
class RecordSchema(helpers.BaseSchema):
    version = marshmallow.fields.Integer(allow_none=True, load_default=None)
    previous_version = marshmallow.fields.Integer(
        allow_none=True, load_default=None, data_key="previousVersion"
    )
    type = marshmallow.fields.String(allow_none=True, load_default=None)
    modified_by = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".ModifiedBySchema"),
        allow_none=True,
        unknown=marshmallow.EXCLUDE,
        load_default=None,
        data_key="modifiedBy",
    )
    modified_at = marshmallow.fields.String(
        allow_none=True, load_default=None, data_key="modifiedAt"
    )
    label = helpers.Discriminator(
        allow_none=True,
        discriminator_field=("type", "type"),
        discriminator_schemas={
            "AssociateRoleLabel": helpers.absmod(
                __name__, ".label.AssociateRoleLabelSchema"
            ),
            "BusinessUnitLabel": helpers.absmod(
                __name__, ".label.BusinessUnitLabelSchema"
            ),
            "CustomObjectLabel": helpers.absmod(
                __name__, ".label.CustomObjectLabelSchema"
            ),
            "CustomerLabel": helpers.absmod(__name__, ".label.CustomerLabelSchema"),
            "LocalizedLabel": helpers.absmod(__name__, ".label.LocalizedLabelSchema"),
            "OrderLabel": helpers.absmod(__name__, ".label.OrderLabelSchema"),
            "PaymentLabel": helpers.absmod(__name__, ".label.PaymentLabelSchema"),
            "ProductLabel": helpers.absmod(__name__, ".label.ProductLabelSchema"),
            "QuoteLabel": helpers.absmod(__name__, ".label.QuoteLabelSchema"),
            "QuoteRequestLabel": helpers.absmod(
                __name__, ".label.QuoteRequestLabelSchema"
            ),
            "ReviewLabel": helpers.absmod(__name__, ".label.ReviewLabelSchema"),
            "StagedQuoteLabel": helpers.absmod(
                __name__, ".label.StagedQuoteLabelSchema"
            ),
            "StringLabel": helpers.absmod(__name__, ".label.StringLabelSchema"),
        },
        load_default=None,
    )
    previous_label = helpers.Discriminator(
        allow_none=True,
        discriminator_field=("type", "type"),
        discriminator_schemas={
            "AssociateRoleLabel": helpers.absmod(
                __name__, ".label.AssociateRoleLabelSchema"
            ),
            "BusinessUnitLabel": helpers.absmod(
                __name__, ".label.BusinessUnitLabelSchema"
            ),
            "CustomObjectLabel": helpers.absmod(
                __name__, ".label.CustomObjectLabelSchema"
            ),
            "CustomerLabel": helpers.absmod(__name__, ".label.CustomerLabelSchema"),
            "LocalizedLabel": helpers.absmod(__name__, ".label.LocalizedLabelSchema"),
            "OrderLabel": helpers.absmod(__name__, ".label.OrderLabelSchema"),
            "PaymentLabel": helpers.absmod(__name__, ".label.PaymentLabelSchema"),
            "ProductLabel": helpers.absmod(__name__, ".label.ProductLabelSchema"),
            "QuoteLabel": helpers.absmod(__name__, ".label.QuoteLabelSchema"),
            "QuoteRequestLabel": helpers.absmod(
                __name__, ".label.QuoteRequestLabelSchema"
            ),
            "ReviewLabel": helpers.absmod(__name__, ".label.ReviewLabelSchema"),
            "StagedQuoteLabel": helpers.absmod(
                __name__, ".label.StagedQuoteLabelSchema"
            ),
            "StringLabel": helpers.absmod(__name__, ".label.StringLabelSchema"),
        },
        load_default=None,
        data_key="previousLabel",
    )
    changes = marshmallow.fields.List(
        helpers.Discriminator(
            allow_none=True,
            discriminator_field=("type", "type"),
            discriminator_schemas={
                "AddAddressChange": helpers.absmod(
                    __name__, ".change.AddAddressChangeSchema"
                ),
                "AddAssetChange": helpers.absmod(
                    __name__, ".change.AddAssetChangeSchema"
                ),
                "AddAssociateChange": helpers.absmod(
                    __name__, ".change.AddAssociateChangeSchema"
                ),
                "AddAttributeDefinitionChange": helpers.absmod(
                    __name__, ".change.AddAttributeDefinitionChangeSchema"
                ),
                "AddBillingAddressIdChange": helpers.absmod(
                    __name__, ".change.AddBillingAddressIdChangeSchema"
                ),
                "AddChannelRolesChange": helpers.absmod(
                    __name__, ".change.AddChannelRolesChangeSchema"
                ),
                "AddCustomLineItemChange": helpers.absmod(
                    __name__, ".change.AddCustomLineItemChangeSchema"
                ),
                "AddDeliveryChange": helpers.absmod(
                    __name__, ".change.AddDeliveryChangeSchema"
                ),
                "AddDiscountCodeChange": helpers.absmod(
                    __name__, ".change.AddDiscountCodeChangeSchema"
                ),
                "AddEnumValueChange": helpers.absmod(
                    __name__, ".change.AddEnumValueChangeSchema"
                ),
                "AddExternalImageChange": helpers.absmod(
                    __name__, ".change.AddExternalImageChangeSchema"
                ),
                "AddFieldDefinitionChange": helpers.absmod(
                    __name__, ".change.AddFieldDefinitionChangeSchema"
                ),
                "AddInheritedAssociateChange": helpers.absmod(
                    __name__, ".change.AddInheritedAssociateChangeSchema"
                ),
                "AddInterfaceInteractionChange": helpers.absmod(
                    __name__, ".change.AddInterfaceInteractionChangeSchema"
                ),
                "AddItemShippingAddressesChange": helpers.absmod(
                    __name__, ".change.AddItemShippingAddressesChangeSchema"
                ),
                "AddLocalizedEnumValueChange": helpers.absmod(
                    __name__, ".change.AddLocalizedEnumValueChangeSchema"
                ),
                "AddLocationChange": helpers.absmod(
                    __name__, ".change.AddLocationChangeSchema"
                ),
                "AddOrderLineItemChange": helpers.absmod(
                    __name__, ".change.AddOrderLineItemChangeSchema"
                ),
                "AddParcelToDeliveryChange": helpers.absmod(
                    __name__, ".change.AddParcelToDeliveryChangeSchema"
                ),
                "AddPaymentChange": helpers.absmod(
                    __name__, ".change.AddPaymentChangeSchema"
                ),
                "AddPlainEnumValueChange": helpers.absmod(
                    __name__, ".change.AddPlainEnumValueChangeSchema"
                ),
                "AddPriceChange": helpers.absmod(
                    __name__, ".change.AddPriceChangeSchema"
                ),
                "AddProductChange": helpers.absmod(
                    __name__, ".change.AddProductChangeSchema"
                ),
                "AddProductSelectionChange": helpers.absmod(
                    __name__, ".change.AddProductSelectionChangeSchema"
                ),
                "AddPropertyChange": helpers.absmod(
                    __name__, ".change.AddPropertyChangeSchema"
                ),
                "AddReturnInfoChange": helpers.absmod(
                    __name__, ".change.AddReturnInfoChangeSchema"
                ),
                "AddShippingAddressIdChange": helpers.absmod(
                    __name__, ".change.AddShippingAddressIdChangeSchema"
                ),
                "AddShoppingListLineItemChange": helpers.absmod(
                    __name__, ".change.AddShoppingListLineItemChangeSchema"
                ),
                "AddStateRolesChange": helpers.absmod(
                    __name__, ".change.AddStateRolesChangeSchema"
                ),
                "AddTaxRateChange": helpers.absmod(
                    __name__, ".change.AddTaxRateChangeSchema"
                ),
                "AddTextLineItemChange": helpers.absmod(
                    __name__, ".change.AddTextLineItemChangeSchema"
                ),
                "AddToCategoryChange": helpers.absmod(
                    __name__, ".change.AddToCategoryChangeSchema"
                ),
                "AddTransactionChange": helpers.absmod(
                    __name__, ".change.AddTransactionChangeSchema"
                ),
                "AddVariantChange": helpers.absmod(
                    __name__, ".change.AddVariantChangeSchema"
                ),
                "ChangeAddressChange": helpers.absmod(
                    __name__, ".change.ChangeAddressChangeSchema"
                ),
                "ChangeAmountAuthorizedChange": helpers.absmod(
                    __name__, ".change.ChangeAmountAuthorizedChangeSchema"
                ),
                "ChangeAmountPlannedChange": helpers.absmod(
                    __name__, ".change.ChangeAmountPlannedChangeSchema"
                ),
                "ChangeAssetNameChange": helpers.absmod(
                    __name__, ".change.ChangeAssetNameChangeSchema"
                ),
                "ChangeAssetOrderChange": helpers.absmod(
                    __name__, ".change.ChangeAssetOrderChangeSchema"
                ),
                "ChangeAssociateChange": helpers.absmod(
                    __name__, ".change.ChangeAssociateChangeSchema"
                ),
                "ChangeAssociateModeChange": helpers.absmod(
                    __name__, ".change.ChangeAssociateModeChangeSchema"
                ),
                "ChangeAttributeConstraintChange": helpers.absmod(
                    __name__, ".change.ChangeAttributeConstraintChangeSchema"
                ),
                "ChangeAttributeOrderByNameChange": helpers.absmod(
                    __name__, ".change.ChangeAttributeOrderByNameChangeSchema"
                ),
                "ChangeBuyerAssignableChange": helpers.absmod(
                    __name__, ".change.ChangeBuyerAssignableChangeSchema"
                ),
                "ChangeCartDiscountsChange": helpers.absmod(
                    __name__, ".change.ChangeCartDiscountsChangeSchema"
                ),
                "ChangeCartPredicateChange": helpers.absmod(
                    __name__, ".change.ChangeCartPredicateChangeSchema"
                ),
                "ChangeCustomLineItemQuantityChange": helpers.absmod(
                    __name__, ".change.ChangeCustomLineItemQuantityChangeSchema"
                ),
                "ChangeDescriptionChange": helpers.absmod(
                    __name__, ".change.ChangeDescriptionChangeSchema"
                ),
                "ChangeEmailChange": helpers.absmod(
                    __name__, ".change.ChangeEmailChangeSchema"
                ),
                "ChangeEnumValueLabelChange": helpers.absmod(
                    __name__, ".change.ChangeEnumValueLabelChangeSchema"
                ),
                "ChangeEnumValueOrderChange": helpers.absmod(
                    __name__, ".change.ChangeEnumValueOrderChangeSchema"
                ),
                "ChangeFieldDefinitionOrderChange": helpers.absmod(
                    __name__, ".change.ChangeFieldDefinitionOrderChangeSchema"
                ),
                "ChangeGroupsChange": helpers.absmod(
                    __name__, ".change.ChangeGroupsChangeSchema"
                ),
                "ChangeInheritedAssociateChange": helpers.absmod(
                    __name__, ".change.ChangeInheritedAssociateChangeSchema"
                ),
                "ChangeInitialChange": helpers.absmod(
                    __name__, ".change.ChangeInitialChangeSchema"
                ),
                "ChangeInputHintChange": helpers.absmod(
                    __name__, ".change.ChangeInputHintChangeSchema"
                ),
                "ChangeIsActiveChange": helpers.absmod(
                    __name__, ".change.ChangeIsActiveChangeSchema"
                ),
                "ChangeIsSearchableChange": helpers.absmod(
                    __name__, ".change.ChangeIsSearchableChangeSchema"
                ),
                "ChangeKeyChange": helpers.absmod(
                    __name__, ".change.ChangeKeyChangeSchema"
                ),
                "ChangeLabelChange": helpers.absmod(
                    __name__, ".change.ChangeLabelChangeSchema"
                ),
                "ChangeLineItemQuantityChange": helpers.absmod(
                    __name__, ".change.ChangeLineItemQuantityChangeSchema"
                ),
                "ChangeLocalizedDescriptionChange": helpers.absmod(
                    __name__, ".change.ChangeLocalizedDescriptionChangeSchema"
                ),
                "ChangeLocalizedEnumValueLabelChange": helpers.absmod(
                    __name__, ".change.ChangeLocalizedEnumValueLabelChangeSchema"
                ),
                "ChangeLocalizedEnumValueOrderChange": helpers.absmod(
                    __name__, ".change.ChangeLocalizedEnumValueOrderChangeSchema"
                ),
                "ChangeLocalizedNameChange": helpers.absmod(
                    __name__, ".change.ChangeLocalizedNameChangeSchema"
                ),
                "ChangeMasterVariantChange": helpers.absmod(
                    __name__, ".change.ChangeMasterVariantChangeSchema"
                ),
                "ChangeNameChange": helpers.absmod(
                    __name__, ".change.ChangeNameChangeSchema"
                ),
                "ChangeOrderHintChange": helpers.absmod(
                    __name__, ".change.ChangeOrderHintChangeSchema"
                ),
                "ChangeOrderStateChange": helpers.absmod(
                    __name__, ".change.ChangeOrderStateChangeSchema"
                ),
                "ChangeParentChange": helpers.absmod(
                    __name__, ".change.ChangeParentChangeSchema"
                ),
                "ChangeParentUnitChange": helpers.absmod(
                    __name__, ".change.ChangeParentUnitChangeSchema"
                ),
                "ChangePaymentStateChange": helpers.absmod(
                    __name__, ".change.ChangePaymentStateChangeSchema"
                ),
                "ChangePlainEnumValueLabelChange": helpers.absmod(
                    __name__, ".change.ChangePlainEnumValueLabelChangeSchema"
                ),
                "ChangePlainEnumValueOrderChange": helpers.absmod(
                    __name__, ".change.ChangePlainEnumValueOrderChangeSchema"
                ),
                "ChangePredicateChange": helpers.absmod(
                    __name__, ".change.ChangePredicateChangeSchema"
                ),
                "ChangePriceChange": helpers.absmod(
                    __name__, ".change.ChangePriceChangeSchema"
                ),
                "ChangeProductSelectionActiveChange": helpers.absmod(
                    __name__, ".change.ChangeProductSelectionActiveChangeSchema"
                ),
                "ChangeQuantityChange": helpers.absmod(
                    __name__, ".change.ChangeQuantityChangeSchema"
                ),
                "ChangeQuoteRequestStateChange": helpers.absmod(
                    __name__, ".change.ChangeQuoteRequestStateChangeSchema"
                ),
                "ChangeQuoteStateChange": helpers.absmod(
                    __name__, ".change.ChangeQuoteStateChangeSchema"
                ),
                "ChangeRequiresDiscountCodeChange": helpers.absmod(
                    __name__, ".change.ChangeRequiresDiscountCodeChangeSchema"
                ),
                "ChangeReviewRatingStatisticsChange": helpers.absmod(
                    __name__, ".change.ChangeReviewRatingStatisticsChangeSchema"
                ),
                "ChangeShipmentStateChange": helpers.absmod(
                    __name__, ".change.ChangeShipmentStateChangeSchema"
                ),
                "ChangeShoppingListLineItemQuantityChange": helpers.absmod(
                    __name__, ".change.ChangeShoppingListLineItemQuantityChangeSchema"
                ),
                "ChangeShoppingListLineItemsOrderChange": helpers.absmod(
                    __name__, ".change.ChangeShoppingListLineItemsOrderChangeSchema"
                ),
                "ChangeSlugChange": helpers.absmod(
                    __name__, ".change.ChangeSlugChangeSchema"
                ),
                "ChangeSortOrderChange": helpers.absmod(
                    __name__, ".change.ChangeSortOrderChangeSchema"
                ),
                "ChangeStackingModeChange": helpers.absmod(
                    __name__, ".change.ChangeStackingModeChangeSchema"
                ),
                "ChangeStagedQuoteStateChange": helpers.absmod(
                    __name__, ".change.ChangeStagedQuoteStateChangeSchema"
                ),
                "ChangeStateTypeChange": helpers.absmod(
                    __name__, ".change.ChangeStateTypeChangeSchema"
                ),
                "ChangeStatusChange": helpers.absmod(
                    __name__, ".change.ChangeStatusChangeSchema"
                ),
                "ChangeTargetChange": helpers.absmod(
                    __name__, ".change.ChangeTargetChangeSchema"
                ),
                "ChangeTaxCalculationModeChange": helpers.absmod(
                    __name__, ".change.ChangeTaxCalculationModeChangeSchema"
                ),
                "ChangeTaxModeChange": helpers.absmod(
                    __name__, ".change.ChangeTaxModeChangeSchema"
                ),
                "ChangeTaxRoundingModeChange": helpers.absmod(
                    __name__, ".change.ChangeTaxRoundingModeChangeSchema"
                ),
                "ChangeTextLineItemNameChange": helpers.absmod(
                    __name__, ".change.ChangeTextLineItemNameChangeSchema"
                ),
                "ChangeTextLineItemQuantityChange": helpers.absmod(
                    __name__, ".change.ChangeTextLineItemQuantityChangeSchema"
                ),
                "ChangeTextLineItemsOrderChange": helpers.absmod(
                    __name__, ".change.ChangeTextLineItemsOrderChangeSchema"
                ),
                "ChangeTransactionInteractionIdChange": helpers.absmod(
                    __name__, ".change.ChangeTransactionInteractionIdChangeSchema"
                ),
                "ChangeTransactionStateChange": helpers.absmod(
                    __name__, ".change.ChangeTransactionStateChangeSchema"
                ),
                "ChangeTransactionTimestampChange": helpers.absmod(
                    __name__, ".change.ChangeTransactionTimestampChangeSchema"
                ),
                "ChangeValueChange": helpers.absmod(
                    __name__, ".change.ChangeValueChangeSchema"
                ),
                "MoveImageToPositionChange": helpers.absmod(
                    __name__, ".change.MoveImageToPositionChangeSchema"
                ),
                "PublishChange": helpers.absmod(
                    __name__, ".change.PublishChangeSchema"
                ),
                "RemoveAddressChange": helpers.absmod(
                    __name__, ".change.RemoveAddressChangeSchema"
                ),
                "RemoveAssetChange": helpers.absmod(
                    __name__, ".change.RemoveAssetChangeSchema"
                ),
                "RemoveAssociateChange": helpers.absmod(
                    __name__, ".change.RemoveAssociateChangeSchema"
                ),
                "RemoveAttributeDefinitionChange": helpers.absmod(
                    __name__, ".change.RemoveAttributeDefinitionChangeSchema"
                ),
                "RemoveBillingAddressIdChange": helpers.absmod(
                    __name__, ".change.RemoveBillingAddressIdChangeSchema"
                ),
                "RemoveChannelRolesChange": helpers.absmod(
                    __name__, ".change.RemoveChannelRolesChangeSchema"
                ),
                "RemoveCustomLineItemChange": helpers.absmod(
                    __name__, ".change.RemoveCustomLineItemChangeSchema"
                ),
                "RemoveDeliveryItemsChange": helpers.absmod(
                    __name__, ".change.RemoveDeliveryItemsChangeSchema"
                ),
                "RemoveDiscountCodeChange": helpers.absmod(
                    __name__, ".change.RemoveDiscountCodeChangeSchema"
                ),
                "RemoveEnumValuesChange": helpers.absmod(
                    __name__, ".change.RemoveEnumValuesChangeSchema"
                ),
                "RemoveFieldDefinitionChange": helpers.absmod(
                    __name__, ".change.RemoveFieldDefinitionChangeSchema"
                ),
                "RemoveFromCategoryChange": helpers.absmod(
                    __name__, ".change.RemoveFromCategoryChangeSchema"
                ),
                "RemoveImageChange": helpers.absmod(
                    __name__, ".change.RemoveImageChangeSchema"
                ),
                "RemoveInheritedAssociateChange": helpers.absmod(
                    __name__, ".change.RemoveInheritedAssociateChangeSchema"
                ),
                "RemoveItemShippingAddressesChange": helpers.absmod(
                    __name__, ".change.RemoveItemShippingAddressesChangeSchema"
                ),
                "RemoveLocalizedEnumValuesChange": helpers.absmod(
                    __name__, ".change.RemoveLocalizedEnumValuesChangeSchema"
                ),
                "RemoveLocationChange": helpers.absmod(
                    __name__, ".change.RemoveLocationChangeSchema"
                ),
                "RemoveOrderLineItemChange": helpers.absmod(
                    __name__, ".change.RemoveOrderLineItemChangeSchema"
                ),
                "RemoveParcelFromDeliveryChange": helpers.absmod(
                    __name__, ".change.RemoveParcelFromDeliveryChangeSchema"
                ),
                "RemovePaymentChange": helpers.absmod(
                    __name__, ".change.RemovePaymentChangeSchema"
                ),
                "RemovePriceChange": helpers.absmod(
                    __name__, ".change.RemovePriceChangeSchema"
                ),
                "RemoveProductChange": helpers.absmod(
                    __name__, ".change.RemoveProductChangeSchema"
                ),
                "RemoveProductSelectionChange": helpers.absmod(
                    __name__, ".change.RemoveProductSelectionChangeSchema"
                ),
                "RemovePropertyChange": helpers.absmod(
                    __name__, ".change.RemovePropertyChangeSchema"
                ),
                "RemoveShippingAddressIdChange": helpers.absmod(
                    __name__, ".change.RemoveShippingAddressIdChangeSchema"
                ),
                "RemoveShoppingListLineItemChange": helpers.absmod(
                    __name__, ".change.RemoveShoppingListLineItemChangeSchema"
                ),
                "RemoveStateRolesChange": helpers.absmod(
                    __name__, ".change.RemoveStateRolesChangeSchema"
                ),
                "RemoveTaxRateChange": helpers.absmod(
                    __name__, ".change.RemoveTaxRateChangeSchema"
                ),
                "RemoveTextLineItemChange": helpers.absmod(
                    __name__, ".change.RemoveTextLineItemChangeSchema"
                ),
                "RemoveVariantChange": helpers.absmod(
                    __name__, ".change.RemoveVariantChangeSchema"
                ),
                "RequestQuoteRenegotiationChange": helpers.absmod(
                    __name__, ".change.RequestQuoteRenegotiationChangeSchema"
                ),
                "SetAddressChange": helpers.absmod(
                    __name__, ".change.SetAddressChangeSchema"
                ),
                "SetAddressCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetAddressCustomFieldChangeSchema"
                ),
                "SetAddressCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetAddressCustomTypeChangeSchema"
                ),
                "SetAnonymousIdChange": helpers.absmod(
                    __name__, ".change.SetAnonymousIdChangeSchema"
                ),
                "SetApplicationVersionChange": helpers.absmod(
                    __name__, ".change.SetApplicationVersionChangeSchema"
                ),
                "SetAssetCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetAssetCustomFieldChangeSchema"
                ),
                "SetAssetCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetAssetCustomTypeChangeSchema"
                ),
                "SetAssetDescriptionChange": helpers.absmod(
                    __name__, ".change.SetAssetDescriptionChangeSchema"
                ),
                "SetAssetKeyChange": helpers.absmod(
                    __name__, ".change.SetAssetKeyChangeSchema"
                ),
                "SetAssetSourcesChange": helpers.absmod(
                    __name__, ".change.SetAssetSourcesChangeSchema"
                ),
                "SetAssetTagsChange": helpers.absmod(
                    __name__, ".change.SetAssetTagsChangeSchema"
                ),
                "SetAttributeChange": helpers.absmod(
                    __name__, ".change.SetAttributeChangeSchema"
                ),
                "SetAuthenticationModeChange": helpers.absmod(
                    __name__, ".change.SetAuthenticationModeChangeSchema"
                ),
                "SetAuthorNameChange": helpers.absmod(
                    __name__, ".change.SetAuthorNameChangeSchema"
                ),
                "SetBillingAddressChange": helpers.absmod(
                    __name__, ".change.SetBillingAddressChangeSchema"
                ),
                "SetCartPredicateChange": helpers.absmod(
                    __name__, ".change.SetCartPredicateChangeSchema"
                ),
                "SetCategoryOrderHintChange": helpers.absmod(
                    __name__, ".change.SetCategoryOrderHintChangeSchema"
                ),
                "SetChannelRolesChange": helpers.absmod(
                    __name__, ".change.SetChannelRolesChangeSchema"
                ),
                "SetCompanyNameChange": helpers.absmod(
                    __name__, ".change.SetCompanyNameChangeSchema"
                ),
                "SetContactEmailChange": helpers.absmod(
                    __name__, ".change.SetContactEmailChangeSchema"
                ),
                "SetCountriesChange": helpers.absmod(
                    __name__, ".change.SetCountriesChangeSchema"
                ),
                "SetCountryChange": helpers.absmod(
                    __name__, ".change.SetCountryChangeSchema"
                ),
                "SetCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetCustomFieldChangeSchema"
                ),
                "SetCustomLineItemCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemCustomFieldChangeSchema"
                ),
                "SetCustomLineItemCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemCustomTypeChangeSchema"
                ),
                "SetCustomLineItemMoneyChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemMoneyChangeSchema"
                ),
                "SetCustomLineItemShippingDetailsChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemShippingDetailsChangeSchema"
                ),
                "SetCustomLineItemTaxAmountChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemTaxAmountChangeSchema"
                ),
                "SetCustomLineItemTaxCategoryChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemTaxCategoryChangeSchema"
                ),
                "SetCustomLineItemTaxRateChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemTaxRateChangeSchema"
                ),
                "SetCustomLineItemTaxedPriceChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemTaxedPriceChangeSchema"
                ),
                "SetCustomLineItemTotalPriceChange": helpers.absmod(
                    __name__, ".change.SetCustomLineItemTotalPriceChangeSchema"
                ),
                "SetCustomShippingMethodChange": helpers.absmod(
                    __name__, ".change.SetCustomShippingMethodChangeSchema"
                ),
                "SetCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetCustomTypeChangeSchema"
                ),
                "SetCustomerChange": helpers.absmod(
                    __name__, ".change.SetCustomerChangeSchema"
                ),
                "SetCustomerEmailChange": helpers.absmod(
                    __name__, ".change.SetCustomerEmailChangeSchema"
                ),
                "SetCustomerGroupChange": helpers.absmod(
                    __name__, ".change.SetCustomerGroupChangeSchema"
                ),
                "SetCustomerIdChange": helpers.absmod(
                    __name__, ".change.SetCustomerIdChangeSchema"
                ),
                "SetCustomerNumberChange": helpers.absmod(
                    __name__, ".change.SetCustomerNumberChangeSchema"
                ),
                "SetDateOfBirthChange": helpers.absmod(
                    __name__, ".change.SetDateOfBirthChangeSchema"
                ),
                "SetDefaultBillingAddressChange": helpers.absmod(
                    __name__, ".change.SetDefaultBillingAddressChangeSchema"
                ),
                "SetDefaultShippingAddressChange": helpers.absmod(
                    __name__, ".change.SetDefaultShippingAddressChangeSchema"
                ),
                "SetDeleteDaysAfterLastModificationChange": helpers.absmod(
                    __name__, ".change.SetDeleteDaysAfterLastModificationChangeSchema"
                ),
                "SetDeliveryAddressChange": helpers.absmod(
                    __name__, ".change.SetDeliveryAddressChangeSchema"
                ),
                "SetDeliveryItemsChange": helpers.absmod(
                    __name__, ".change.SetDeliveryItemsChangeSchema"
                ),
                "SetDescriptionChange": helpers.absmod(
                    __name__, ".change.SetDescriptionChangeSchema"
                ),
                "SetDiscountedPriceChange": helpers.absmod(
                    __name__, ".change.SetDiscountedPriceChangeSchema"
                ),
                "SetDistributionChannelsChange": helpers.absmod(
                    __name__, ".change.SetDistributionChannelsChangeSchema"
                ),
                "SetExpectedDeliveryChange": helpers.absmod(
                    __name__, ".change.SetExpectedDeliveryChangeSchema"
                ),
                "SetExternalIdChange": helpers.absmod(
                    __name__, ".change.SetExternalIdChangeSchema"
                ),
                "SetFirstNameChange": helpers.absmod(
                    __name__, ".change.SetFirstNameChangeSchema"
                ),
                "SetGeoLocationChange": helpers.absmod(
                    __name__, ".change.SetGeoLocationChangeSchema"
                ),
                "SetImageLabelChange": helpers.absmod(
                    __name__, ".change.SetImageLabelChangeSchema"
                ),
                "SetInputTipChange": helpers.absmod(
                    __name__, ".change.SetInputTipChangeSchema"
                ),
                "SetInterfaceIdChange": helpers.absmod(
                    __name__, ".change.SetInterfaceIdChangeSchema"
                ),
                "SetIsValidChange": helpers.absmod(
                    __name__, ".change.SetIsValidChangeSchema"
                ),
                "SetKeyChange": helpers.absmod(__name__, ".change.SetKeyChangeSchema"),
                "SetLanguagesChange": helpers.absmod(
                    __name__, ".change.SetLanguagesChangeSchema"
                ),
                "SetLastNameChange": helpers.absmod(
                    __name__, ".change.SetLastNameChangeSchema"
                ),
                "SetLineItemDeactivatedAtChange": helpers.absmod(
                    __name__, ".change.SetLineItemDeactivatedAtChangeSchema"
                ),
                "SetLineItemDiscountedPriceChange": helpers.absmod(
                    __name__, ".change.SetLineItemDiscountedPriceChangeSchema"
                ),
                "SetLineItemDiscountedPricePerQuantityChange": helpers.absmod(
                    __name__,
                    ".change.SetLineItemDiscountedPricePerQuantityChangeSchema",
                ),
                "SetLineItemDistributionChannelChange": helpers.absmod(
                    __name__, ".change.SetLineItemDistributionChannelChangeSchema"
                ),
                "SetLineItemPriceChange": helpers.absmod(
                    __name__, ".change.SetLineItemPriceChangeSchema"
                ),
                "SetLineItemProductKeyChange": helpers.absmod(
                    __name__, ".change.SetLineItemProductKeyChangeSchema"
                ),
                "SetLineItemProductSlugChange": helpers.absmod(
                    __name__, ".change.SetLineItemProductSlugChangeSchema"
                ),
                "SetLineItemShippingDetailsChange": helpers.absmod(
                    __name__, ".change.SetLineItemShippingDetailsChangeSchema"
                ),
                "SetLineItemTaxAmountChange": helpers.absmod(
                    __name__, ".change.SetLineItemTaxAmountChangeSchema"
                ),
                "SetLineItemTaxRateChange": helpers.absmod(
                    __name__, ".change.SetLineItemTaxRateChangeSchema"
                ),
                "SetLineItemTaxedPriceChange": helpers.absmod(
                    __name__, ".change.SetLineItemTaxedPriceChangeSchema"
                ),
                "SetLineItemTotalPriceChange": helpers.absmod(
                    __name__, ".change.SetLineItemTotalPriceChangeSchema"
                ),
                "SetLocaleChange": helpers.absmod(
                    __name__, ".change.SetLocaleChangeSchema"
                ),
                "SetLocalizedDescriptionChange": helpers.absmod(
                    __name__, ".change.SetLocalizedDescriptionChangeSchema"
                ),
                "SetMaxApplicationsChange": helpers.absmod(
                    __name__, ".change.SetMaxApplicationsChangeSchema"
                ),
                "SetMaxApplicationsPerCustomerChange": helpers.absmod(
                    __name__, ".change.SetMaxApplicationsPerCustomerChangeSchema"
                ),
                "SetMetaDescriptionChange": helpers.absmod(
                    __name__, ".change.SetMetaDescriptionChangeSchema"
                ),
                "SetMetaKeywordsChange": helpers.absmod(
                    __name__, ".change.SetMetaKeywordsChangeSchema"
                ),
                "SetMetaTitleChange": helpers.absmod(
                    __name__, ".change.SetMetaTitleChangeSchema"
                ),
                "SetMethodInfoInterfaceChange": helpers.absmod(
                    __name__, ".change.SetMethodInfoInterfaceChangeSchema"
                ),
                "SetMethodInfoMethodChange": helpers.absmod(
                    __name__, ".change.SetMethodInfoMethodChangeSchema"
                ),
                "SetMethodInfoNameChange": helpers.absmod(
                    __name__, ".change.SetMethodInfoNameChangeSchema"
                ),
                "SetMiddleNameChange": helpers.absmod(
                    __name__, ".change.SetMiddleNameChangeSchema"
                ),
                "SetNameChange": helpers.absmod(
                    __name__, ".change.SetNameChangeSchema"
                ),
                "SetLocalizedNameChange": helpers.absmod(
                    __name__, ".change.SetLocalizedNameChangeSchema"
                ),
                "SetOrderLineItemCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetOrderLineItemCustomFieldChangeSchema"
                ),
                "SetOrderLineItemCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetOrderLineItemCustomTypeChangeSchema"
                ),
                "SetOrderNumberChange": helpers.absmod(
                    __name__, ".change.SetOrderNumberChangeSchema"
                ),
                "SetOrderTaxedPriceChange": helpers.absmod(
                    __name__, ".change.SetOrderTaxedPriceChangeSchema"
                ),
                "SetOrderTotalPriceChange": helpers.absmod(
                    __name__, ".change.SetOrderTotalPriceChangeSchema"
                ),
                "SetOrderTotalTaxChange": helpers.absmod(
                    __name__, ".change.SetOrderTotalTaxChangeSchema"
                ),
                "SetParcelItemsChange": helpers.absmod(
                    __name__, ".change.SetParcelItemsChangeSchema"
                ),
                "SetParcelMeasurementsChange": helpers.absmod(
                    __name__, ".change.SetParcelMeasurementsChangeSchema"
                ),
                "SetParcelTrackingDataChange": helpers.absmod(
                    __name__, ".change.SetParcelTrackingDataChangeSchema"
                ),
                "SetPermissionsChange": helpers.absmod(
                    __name__, ".change.SetPermissionsChangeSchema"
                ),
                "SetPricesChange": helpers.absmod(
                    __name__, ".change.SetPricesChangeSchema"
                ),
                "SetProductCountChange": helpers.absmod(
                    __name__, ".change.SetProductCountChangeSchema"
                ),
                "SetProductPriceCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetProductPriceCustomFieldChangeSchema"
                ),
                "SetProductPriceCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetProductPriceCustomTypeChangeSchema"
                ),
                "SetProductSelectionsChange": helpers.absmod(
                    __name__, ".change.SetProductSelectionsChangeSchema"
                ),
                "SetProductVariantKeyChange": helpers.absmod(
                    __name__, ".change.SetProductVariantKeyChangeSchema"
                ),
                "SetPropertyChange": helpers.absmod(
                    __name__, ".change.SetPropertyChangeSchema"
                ),
                "SetPurchaseOrderNumberChange": helpers.absmod(
                    __name__, ".change.SetPurchaseOrderNumberChangeSchema"
                ),
                "SetRatingChange": helpers.absmod(
                    __name__, ".change.SetRatingChangeSchema"
                ),
                "SetReservationsChange": helpers.absmod(
                    __name__, ".change.SetReservationsChangeSchema"
                ),
                "SetRestockableInDaysChange": helpers.absmod(
                    __name__, ".change.SetRestockableInDaysChangeSchema"
                ),
                "SetReturnPaymentStateChange": helpers.absmod(
                    __name__, ".change.SetReturnPaymentStateChangeSchema"
                ),
                "SetReturnShipmentStateChange": helpers.absmod(
                    __name__, ".change.SetReturnShipmentStateChangeSchema"
                ),
                "SetSalutationChange": helpers.absmod(
                    __name__, ".change.SetSalutationChangeSchema"
                ),
                "SetSearchKeywordsChange": helpers.absmod(
                    __name__, ".change.SetSearchKeywordsChangeSchema"
                ),
                "SetSellerCommentChange": helpers.absmod(
                    __name__, ".change.SetSellerCommentChangeSchema"
                ),
                "SetShippingAddressChange": helpers.absmod(
                    __name__, ".change.SetShippingAddressChangeSchema"
                ),
                "SetShippingInfoPriceChange": helpers.absmod(
                    __name__, ".change.SetShippingInfoPriceChangeSchema"
                ),
                "SetShippingInfoTaxedPriceChange": helpers.absmod(
                    __name__, ".change.SetShippingInfoTaxedPriceChangeSchema"
                ),
                "SetShippingMethodChange": helpers.absmod(
                    __name__, ".change.SetShippingMethodChangeSchema"
                ),
                "SetShippingMethodTaxAmountChange": helpers.absmod(
                    __name__, ".change.SetShippingMethodTaxAmountChangeSchema"
                ),
                "SetShippingMethodTaxRateChange": helpers.absmod(
                    __name__, ".change.SetShippingMethodTaxRateChangeSchema"
                ),
                "SetShippingRateChange": helpers.absmod(
                    __name__, ".change.SetShippingRateChangeSchema"
                ),
                "SetShippingRateInputChange": helpers.absmod(
                    __name__, ".change.SetShippingRateInputChangeSchema"
                ),
                "SetShoppingListLineItemCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetShoppingListLineItemCustomFieldChangeSchema"
                ),
                "SetShoppingListLineItemCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetShoppingListLineItemCustomTypeChangeSchema"
                ),
                "SetSkuChange": helpers.absmod(__name__, ".change.SetSkuChangeSchema"),
                "SetSlugChange": helpers.absmod(
                    __name__, ".change.SetSlugChangeSchema"
                ),
                "SetStateRolesChange": helpers.absmod(
                    __name__, ".change.SetStateRolesChangeSchema"
                ),
                "SetStatusInterfaceCodeChange": helpers.absmod(
                    __name__, ".change.SetStatusInterfaceCodeChangeSchema"
                ),
                "SetStatusInterfaceTextChange": helpers.absmod(
                    __name__, ".change.SetStatusInterfaceTextChangeSchema"
                ),
                "SetStoreChange": helpers.absmod(
                    __name__, ".change.SetStoreChangeSchema"
                ),
                "SetStoreModeChange": helpers.absmod(
                    __name__, ".change.SetStoreModeChangeSchema"
                ),
                "SetStoresChange": helpers.absmod(
                    __name__, ".change.SetStoresChangeSchema"
                ),
                "SetSupplyChannelChange": helpers.absmod(
                    __name__, ".change.SetSupplyChannelChangeSchema"
                ),
                "SetSupplyChannelsChange": helpers.absmod(
                    __name__, ".change.SetSupplyChannelsChangeSchema"
                ),
                "SetTargetChange": helpers.absmod(
                    __name__, ".change.SetTargetChangeSchema"
                ),
                "SetTaxCategoryChange": helpers.absmod(
                    __name__, ".change.SetTaxCategoryChangeSchema"
                ),
                "SetTextChange": helpers.absmod(
                    __name__, ".change.SetTextChangeSchema"
                ),
                "SetTextLineItemCustomFieldChange": helpers.absmod(
                    __name__, ".change.SetTextLineItemCustomFieldChangeSchema"
                ),
                "SetTextLineItemCustomTypeChange": helpers.absmod(
                    __name__, ".change.SetTextLineItemCustomTypeChangeSchema"
                ),
                "SetTextLineItemDescriptionChange": helpers.absmod(
                    __name__, ".change.SetTextLineItemDescriptionChangeSchema"
                ),
                "SetTitleChange": helpers.absmod(
                    __name__, ".change.SetTitleChangeSchema"
                ),
                "SetTransitionsChange": helpers.absmod(
                    __name__, ".change.SetTransitionsChangeSchema"
                ),
                "SetValidFromAndUntilChange": helpers.absmod(
                    __name__, ".change.SetValidFromAndUntilChangeSchema"
                ),
                "SetValidFromChange": helpers.absmod(
                    __name__, ".change.SetValidFromChangeSchema"
                ),
                "SetValidToChange": helpers.absmod(
                    __name__, ".change.SetValidToChangeSchema"
                ),
                "SetValidUntilChange": helpers.absmod(
                    __name__, ".change.SetValidUntilChangeSchema"
                ),
                "SetValueChange": helpers.absmod(
                    __name__, ".change.SetValueChangeSchema"
                ),
                "SetVariantAvailabilityChange": helpers.absmod(
                    __name__, ".change.SetVariantAvailabilityChangeSchema"
                ),
                "SetVariantSelectionChange": helpers.absmod(
                    __name__, ".change.SetVariantSelectionChangeSchema"
                ),
                "SetVatIdChange": helpers.absmod(
                    __name__, ".change.SetVatIdChangeSchema"
                ),
                "TransitionCustomLineItemStateChange": helpers.absmod(
                    __name__, ".change.TransitionCustomLineItemStateChangeSchema"
                ),
                "TransitionLineItemStateChange": helpers.absmod(
                    __name__, ".change.TransitionLineItemStateChangeSchema"
                ),
                "TransitionStateChange": helpers.absmod(
                    __name__, ".change.TransitionStateChangeSchema"
                ),
                "UnknownChange": helpers.absmod(
                    __name__, ".change.UnknownChangeSchema"
                ),
                "UnpublishChange": helpers.absmod(
                    __name__, ".change.UnpublishChangeSchema"
                ),
                "UpdateSyncInfoChange": helpers.absmod(
                    __name__, ".change.UpdateSyncInfoChangeSchema"
                ),
                "VerifyEmailChange": helpers.absmod(
                    __name__, ".change.VerifyEmailChangeSchema"
                ),
            },
        ),
        allow_none=True,
        load_default=None,
    )
    resource = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".common.ResourceIdentifierSchema"),
        allow_none=True,
        unknown=marshmallow.EXCLUDE,
        load_default=None,
    )
    stores = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".common.KeyReferenceSchema"),
        allow_none=True,
        many=True,
        unknown=marshmallow.EXCLUDE,
        load_default=None,
    )
    business_unit = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".common.KeyReferenceSchema"),
        allow_none=True,
        unknown=marshmallow.EXCLUDE,
        metadata={"omit_empty": True},
        load_default=None,
        data_key="businessUnit",
    )
    without_changes = marshmallow.fields.Boolean(
        allow_none=True, load_default=None, data_key="withoutChanges"
    )

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data, **kwargs):

        return models.Record(**data)


class RecordPagedQueryResponseSchema(helpers.BaseSchema):
    limit = marshmallow.fields.Integer(allow_none=True, load_default=None)
    count = marshmallow.fields.Integer(allow_none=True, load_default=None)
    total = marshmallow.fields.Integer(allow_none=True, load_default=None)
    offset = marshmallow.fields.Integer(allow_none=True, load_default=None)
    results = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".RecordSchema"),
        allow_none=True,
        many=True,
        unknown=marshmallow.EXCLUDE,
        load_default=None,
    )

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data, **kwargs):

        return models.RecordPagedQueryResponse(**data)


class ErrorObjectSchema(helpers.BaseSchema):
    code = marshmallow.fields.String(allow_none=True, load_default=None)
    message = marshmallow.fields.String(allow_none=True, load_default=None)

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data, **kwargs):

        return models.ErrorObject(**data)


class ErrorResponseSchema(helpers.BaseSchema):
    status_code = marshmallow.fields.Integer(
        allow_none=True, load_default=None, data_key="statusCode"
    )
    message = marshmallow.fields.String(allow_none=True, load_default=None)
    error = marshmallow.fields.String(
        allow_none=True, metadata={"omit_empty": True}, load_default=None
    )
    error_description = marshmallow.fields.String(
        allow_none=True, metadata={"omit_empty": True}, load_default=None
    )
    errors = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".ErrorObjectSchema"),
        allow_none=True,
        many=True,
        unknown=marshmallow.EXCLUDE,
        metadata={"omit_empty": True},
        load_default=None,
    )

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data, **kwargs):

        return models.ErrorResponse(**data)


class ModifiedBySchema(helpers.BaseSchema):
    id = marshmallow.fields.String(allow_none=True, load_default=None)
    type = marshmallow.fields.String(allow_none=True, load_default=None)
    client_id = marshmallow.fields.String(
        allow_none=True,
        metadata={"omit_empty": True},
        load_default=None,
        data_key="clientId",
    )
    anonymous_id = marshmallow.fields.String(
        allow_none=True,
        metadata={"omit_empty": True},
        load_default=None,
        data_key="anonymousId",
    )
    customer = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".common.ReferenceSchema"),
        allow_none=True,
        unknown=marshmallow.EXCLUDE,
        metadata={"omit_empty": True},
        load_default=None,
    )
    associate = helpers.LazyNestedField(
        nested=helpers.absmod(__name__, ".common.ReferenceSchema"),
        allow_none=True,
        unknown=marshmallow.EXCLUDE,
        metadata={"omit_empty": True},
        load_default=None,
    )
    is_platform_client = marshmallow.fields.Boolean(
        allow_none=True, load_default=None, data_key="isPlatformClient"
    )

    class Meta:
        unknown = marshmallow.EXCLUDE

    @marshmallow.post_load
    def post_load(self, data, **kwargs):

        return models.ModifiedBy(**data)
